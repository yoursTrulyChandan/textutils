{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","rows","onChange","event","target","backgroundColor","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Navbar_Navbar","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.585d0dec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a> */}\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About text here\" };\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm (props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase button is clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case!\", \"primary\");\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        // console.log(\"Uppercase button is clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case!\", \"primary\");\r\n    }\r\n    \r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase button is clicked\" + text);\r\n        setText(\"\");\r\n        props.showAlert(\"Text box cleared!\", \"primary\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change happening\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    \r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied text!\", \"primary\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed extra spaces!\", \"primary\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div style={{color: props.mode === \"light\" ? \"black\" : \"white\"}}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          onChange={handleOnChange}\r\n          style={{backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\", color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n    </div>\r\n    <div className=\"container\" style={{color: props.mode === \"light\" ? \"black\" : \"white\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview it here\" }</p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { Navbar } from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200)\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n      {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter your text below to analyze\" mode={mode} showAlert={showAlert}/>}/> */}\n      {/* <Route exact path=\"/about\" element={<About/>}/> */}\n        {/* </Routes> */}\n        <TextForm heading=\"Enter your text below to analyze\" mode={mode} showAlert={showAlert}/>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}